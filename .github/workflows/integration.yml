name: Integration Workflow

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [$default-branch]

jobs:
  Config:
    runs-on: ubuntu-latest
    env:
      APP: ./Project-Template
      MODULE: .
    outputs:
      app-directory: ${{ steps.app-dir.outputs.dir }}
      module-directory: ${{ steps.module-dir.outputs.dir }}
    steps:
      - name: Set Dependencies Directory
        id: app-dir
        run: echo dir=$APP >> $GITHUB_OUTPUT

      - name: Set DUT Directory
        id: module-dir
        run: echo dir=$MODULE >> $GITHUB_OUTPUT

  Build:
    needs: [Config]
    runs-on: ubuntu-latest

    steps:
      - name: Setup Deploy Keys
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.GHA_WF_KEY }}
            ${{ secrets.DOCKER_DEMO_KEY }}

      - name: Setup Cache & Dependencies
        uses: cristovamsilva/python-dependencies-action@v1
        with:
          app-directory: ${{ needs.Config.outputs.app-directory }}

  # Quality:
  #   needs: [Config, Build]
  #   uses: ./.github/workflows/reusable-qa.yml
  #   with:
  #     app-directory: ${{ needs.Config.outputs.app-directory }}
  #     module-directory: ${{ needs.Config.outputs.module-directory }}

  # Security:
  #   needs: [Config, Build]
  #   uses: ./.github/workflows/reusable-security.yml
  #   secrets: inherit
  #   with:
  #     app-directory: ${{ needs.Config.outputs.app-directory }}
  #     module-directory: ${{ needs.Config.outputs.module-directory }}
  #     dependency-review: true

  Test:
    needs: [Config, Build]
    uses: ./.github/workflows/reusable-test.yml
    with:
      app-directory: ${{ needs.Config.outputs.app-directory }}
      module-directory: ${{ needs.Config.outputs.module-directory }}
      exec-report: exec-report.xml
      cov-report: coverage.xml

  SonarCloud:
    # needs: [Quality, Security, Test]
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download PyTest Execution Report
        uses: actions/download-artifact@v3
        with:
          name: pytest-exec-results
          path: ./Project-Template/

      - name: Download PyTest Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: pytest-cov-results
          path: ./Project-Template/

      - name: Display structure of downloaded files
        run: ls -R

      # - name: Download Pylint Report
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: pylint-results

      # - name: Download Flake8 Report
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: flake8-results

      # - name: Download Bandit Results
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: bandit-results

      - name: Scan with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
