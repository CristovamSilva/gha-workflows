name: Deployment Workflow

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::306094223949:role/gha-template-role
          role-session-name: templatesession
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-Buildx-action@v2
        id: buildx

      - name: Build and Push Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gha-test-repo
          IMAGE_TAG: ${{ github.sha }}
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # ssh: default=${{ env.SSH_AUTH_SOCK }}
          context: ./Project-Template
          file: ./Project-Template/Dockerfile
          tags: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          push: True

      - name: Download task definition
        env:
          TASK_DEFINITION: template-task
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: template
          image: ${{ steps.build-image.outputs.imageid }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: template-service
          cluster: default
          wait-for-service-stability: false
