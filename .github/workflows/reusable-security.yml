name: Reusable Security
on:
  workflow_call:
    inputs:
      app-directory:
        description: What folder to search for requirements
        required: true
        type: string
      module-directory:
        description: What folder to analyzie
        required: true
        type: string
      bandit:
        description: Whether to scan with Bandit.
        required: false
        default: true
        type: boolean
      bandit-report:
        description: Where to save coverage results.
        required: false
        default: bandit.xml
        type: string
      dependency-review:
        description: Verify problems with dependencies.
        required: false
        default: true
        type: boolean

jobs:
  Bandit:
    runs-on: ubuntu-latest
    if: inputs.bandit
    steps:
      - name: Load Cache & Dependencies
        uses: cristovamsilva/python-dependencies-action@v1
        with:
          app-directory: ${{ inputs.app-directory }}

      - name: Verify with Bandit
        continue-on-error: true
        run: bandit -r ${{ inputs.module-directory }} -f xml -o ${{ inputs.bandit-report }}
        working-directory: ${{ inputs.app-directory }}

      - name: Upload Bandit results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-exec-results
          path: ${{ inputs.app-directory }}/${{ inputs.bandit-report }}

  Dependency-Review:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event_name == 'pull_request' && inputs.dependency-review
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          license-check: false
          config-file: "./.github/dependency-review-config.yml"
