name: Reusable Security Check Workflow
on:
  workflow_call:
    inputs:
      dependencies-directory:
        description: What folder to search for requirements.
        required: false
        default: "."
        type: string
      source-directory:
        description: Directory containing the source code.
        required: true
        type: string
      package-directory:
        description: Directory containing a specific module source code.
        required: false
        default: "."
        type: string

      bandit:
        description: Whether to run bandit.
        required: false
        default: true
        type: boolean

      dependencies-review:
        description: Whether to run bandit.
        required: false
        default: true
        type: boolean
      review-config-file:
        description: Whether to run bandit.
        required: false
        default: "./.github/dependency-review-config.yml"
        type: string

    outputs:
      security-report:
        description: "Bandit Report Path"
        value: ${{ jobs.Bandit.outputs.report_path }}

jobs:
  Bandit:
    runs-on: ubuntu-latest
    outputs:
      report_path: ${{ env.report_path }}/${{ env.report_file }}
    env:
      report_path: bandit-results
      report_file: bandit.json
    steps:
      - name: Load Cache & Dependencies
        uses: CristovamSilva/python-dependencies-action@master
        with:
          dependencies-directory: ${{ inputs.dependencies-directory }}
          security: true
          security-packages: bandit

      - name: Verify with Bandit
        run: bandit -r ${{ inputs.package-directory }} -f json -o ${{ env.report_file }}
        working-directory: ${{ inputs.source-directory }}

      - name: Upload Bandit results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.report_path }}
          path: ${{ inputs.source-directory }}/${{ env.report_file }}

  Dependency-Review:
    runs-on: ubuntu-latest
    if: inputs.dependencies-review && github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Review Dependencies
        uses: actions/dependency-review-action@v3
        with:
          config-file: ${{ inputs.review-config-file }}
